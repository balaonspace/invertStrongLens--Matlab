function [sourcedata, srcflux, magnification,Y] = GETmisfitLensNIEXS(lensParam,arcImage,kparam,X,Xm)
% % % % Invert the given image for the given lens parameters and find the
% area and position vector of the source

muThresh = 30;
pixsz = kparam(1);

% % % % % compute the deflection angle
[~,alpha] = GETalphaNIEXS(lensParam,Xm);

% % % % Lensing equation - transforrmation map
Y = Xm - alpha;

% % % % Magnification
mu = GETmagnification(Y,pixsz); 

% % % % find the pixels near the critical curve
m = mu; m = m(m>muThresh);
x1 = real(X); x2 = imag(X);

x1 = x1(mu>muThresh); x2 = x2(mu>muThresh);

% % % % recompute magnification for points near critical curve
hpixsz = pixsz/2;
mu1 = zeros(length(m),1);
for ii = 1:length(m)
    kkparam = [hpixsz,3,x1(ii),x2(ii)];
    
    [XX1,XX2] = GETlensGrid(kkparam);
    XX = complex(XX1,XX2);
    
    [~,alpha1] = GETalphaNIEXS(lensParam,XX);
    Y1 = XX - alpha1;
    mu1(ii) = sum(sum(GETmagnification(Y1,hpixsz)))/4;
end


mu(mu>muThresh) = mu1;


magnification = mu;

% % % find the magnification of each pixel in the arc
mu = mu(arcImage>0);


% % % compute the deflection angle
[~,alpha] = GETalphaNIEXS(lensParam,X);

% % % % Lensing equation
Y = X - alpha;

% % % % find the pixels in the source plane
sourcedata = Y(arcImage>0);
imgdata = arcImage(arcImage>0);

% % % % find the flux of the pixels in the source plane
srcflux = imgdata./mu;
